<UserControl x:Class="Projet.UserControls.LOGIN.LogSignUser"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Custom1="http://metro.mahapps.com/winfx/xaml/shared"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:local="clr-namespace:Projet.UserControls.LOGIN"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="500">
    <UserControl.Resources>
        <Storyboard x:Key="OnLoaded1" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="erreurMessage">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="2"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <ComboBox x:Name="userName" ToolTip="اسم المستخدم" FontSize="13" Margin="80,-110,0,0" Text="اسم المستخدم" FontFamily="/Projet;component/Resources/#TheSans Plain" VerticalAlignment="Center" Height="35" Width="150" Background="#FF2196F3" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" FlowDirection="RightToLeft" Foreground="White" BorderBrush="{x:Null}" BorderThickness="0" LostFocus="userName_LostFocus" IsDropDownOpen="True" SelectedIndex="0">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="2"  Text="{Binding NomComplet}" FontSize="13" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center"/>
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>
        <Button x:Name="buttonRetour" IsCancel="True" HorizontalAlignment="Left" Margin="110,125,0,0" VerticalAlignment="Top" Width="60" Height="60" Click="buttonRetour_Click" ToolTip="العودة الى الصفحة السابقة" BorderBrush="{x:Null}" Background="{x:Null}" Style="{DynamicResource ButtonRond60_60}">
            <Button.Resources>
                <Style x:Key="ButtonRond60_60" TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                    <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="MinHeight" Value="25"/>
                    <Setter Property="Padding" Value="5,6"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.05"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Ellipse Fill="#FF2196F3" Height="60" Margin="0" Stroke="{x:Null}" VerticalAlignment="Bottom" StrokeThickness="0" Width="60">
                                        <Ellipse.Effect>
                                            <DropShadowEffect Opacity="0.6" ShadowDepth="0" Direction="0" BlurRadius="4"/>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                    <Ellipse x:Name="ellipse" Fill="Black" Height="60" Margin="0" Stroke="{x:Null}" VerticalAlignment="Bottom" StrokeThickness="0" Width="60" Opacity="0"/>
                                    <Path Data="M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z" Fill="White" Stroke="#FF2196F3" HorizontalAlignment="Stretch" VerticalAlignment="Top" StrokeThickness="0" RenderTransformOrigin="0.5,0.5" Margin="25,-13,0,0" d:LayoutOverrides="Width">
                                        <Path.Effect>
                                            <DropShadowEffect ShadowDepth="0" Opacity="0.5"/>
                                        </Path.Effect>
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="2.5" ScaleY="2.5"/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Width="60" Height="60" Panel.ZIndex="1" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsPressed" Value="True"/>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
            <TextBlock Text="عودة" FontSize="14" Foreground="White"></TextBlock>
        </Button>
       <PasswordBox x:Name="passwordBox" ToolTip="تأكد من خيارات اللغة عندك" Width="150" Height="35" Margin="80,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#FF2196F3" LostFocus="passwordBox_LostFocus" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FlowDirection="RightToLeft" CaretBrush="{x:Null}" Foreground="White" BorderBrush="{x:Null}" Style="{DynamicResource PasswordBoxStyle1}" BorderThickness="0">
            <PasswordBox.Resources>
                <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                    <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
                    <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
                    <Setter Property="Custom:TextBoxHelper.ButtonWidth" Value="22"/>
                    <Setter Property="Custom:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}"/>
                    <Setter Property="Custom:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                    <Setter Property="Custom:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                    <Setter Property="Custom:PasswordBoxHelper.CapsLockIcon">
                        <Setter.Value>
                            <Grid Background="{DynamicResource BlackBrush}" Height="16" Opacity="0.8" Width="16">
                                <Grid.OpacityMask>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Canvas Height="24" Width="24">
                                                <Path Data="M13,14L11,14 11,10 13,10 M13,18L11,18 11,16 13,16 M1,21L23,21 12,2 1,21z" Fill="Black"/>
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Grid.OpacityMask>
                            </Grid>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Custom:TextBoxHelper.IsMonitoring" Value="True"/>
                    <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                    <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                    <Setter Property="MinHeight" Value="26"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                    <Setter Property="Custom1:StylizedBehaviors.Behaviors">
                        <Setter.Value>
                            <Custom1:StylizedBehaviorCollection>
                                <Custom1:PasswordBoxBindingBehavior/>
                            </Custom1:StylizedBehaviorCollection>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type PasswordBox}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="enterGotFocus">
                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                    <Storyboard x:Key="exitGotFocus">
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                    <Storyboard x:Key="enterHasText">
                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                    <Storyboard x:Key="exitHasText">
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid>
                                    <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                        <AdornerDecorator.CacheMode>
                                            <BitmapCache EnableClearType="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </AdornerDecorator.CacheMode>
                                        <Border x:Name="PART_WaitingForDataEffectGrid" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </AdornerDecorator>
                                    <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Grid Margin="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition x:Name="ButtonRow" Height="*"/>
                                        </Grid.RowDefinitions>
                                        <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                        <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Custom:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <ContentControl x:Name="PART_FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                            <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Custom:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </ContentControl>
                                        <ContentPresenter x:Name="PART_CapsLockIndicator" Content="{Binding (Custom:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" TextElement.Foreground="{DynamicResource ControlsValidationBrush}" HorizontalAlignment="Right" Margin="1" Grid.Row="0" Grid.RowSpan="2" ToolTip="{Binding (Custom:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center"/>
                                        <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding Custom:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding Custom:TextBoxHelper.ButtonContent}" Grid.Column="2" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding Custom:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding Custom:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" Custom:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Custom:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding Custom:TextBoxHelper.ButtonWidth}">
                                            <Button.Visibility>
                                                <Binding Mode="OneWay" Path="(Custom:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <BooleanToVisibilityConverter/>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Button.Visibility>
                                        </Button>
                                    </Grid>
                                    <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Custom:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Password, Mode=OneWay, RelativeSource={RelativeSource Self}}" Value="">
                                        <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding (Custom:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                            <Condition Binding="{Binding (Custom:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0" To="15" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.EnterActions>
                                        <MultiDataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" From="15" To="0" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                    <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiDataTrigger.ExitActions>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Custom:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                        <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                        <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                        <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                        <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                        <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Custom:TextBoxHelper.HasText" Value="False"/>
                                            <Condition Property="IsFocused" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiTrigger.EnterActions>
                                        <MultiTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiTrigger.ExitActions>
                                    </MultiTrigger>
                                    <Trigger Property="Custom:TextBoxHelper.HasText" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                        <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsVisible" Value="True"/>
                                            <Condition Property="Custom:TextBoxHelper.IsWaitingForData" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiTrigger.EnterActions>
                                        <Setter Property="Effect" TargetName="PART_WaitingForDataEffectGrid" Value="{DynamicResource WaitingForDataEffect}"/>
                                        <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
                                    </MultiTrigger>
                                    <Trigger Property="Custom:TextBoxHelper.IsWaitingForData" Value="False">
                                        <Setter Property="Effect" TargetName="PART_WaitingForDataEffectGrid" Value="{x:Null}"/>
                                        <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </PasswordBox.Resources>
        </PasswordBox>
        <TextBox x:Name="passwordPlaceHolder" ToolTip="الرجاء ادخال كلمة السر" Margin="80,0,0,0" FontSize="14" FontWeight="Bold" Opacity="0.95" FontFamily="/Projet;component/Resources/#TheSans Plain" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Text="ادخل كلمة المرور" Width="150" Height="35" VerticalAlignment="Center" HorizontalAlignment="Center" d:LayoutOverrides="Height" GotFocus="passwordPlaceHolder_GotFocus" BorderBrush="{x:Null}" CaretBrush="{x:Null}" BorderThickness="0" Background="#FF2196F3" SelectionBrush="{x:Null}"/>
        <TextBlock x:Name="erreurMessage" ToolTip="خطأ" Margin="-200,-55,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="120" FontSize="13" TextWrapping="Wrap" Foreground="#FFF44336" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
        <Button x:Name="buttonEntrer" ToolTip="الدخول الى التطبيق" IsDefault="True" Margin="170,150,0,0" VerticalAlignment="Center" Background="#FF2096F3" BorderBrush="{x:Null}" Click="buttonEntrer_Click" HorizontalAlignment="Center" Height="35" Width="80" Foreground="White" Style="{DynamicResource ButtonRectangle}">
            <Button.Resources>
                <Style x:Key="ButtonRectangle" TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                    <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="MinHeight" Value="25"/>
                    <Setter Property="Padding" Value="5,6"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="couche">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.05"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="couche">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle Fill="#FF2196F3" Height="35" Margin="0" Stroke="{x:Null}" VerticalAlignment="Center" Width="80" HorizontalAlignment="Center" RadiusX="5" RadiusY="5" StrokeThickness="0"/>
                                    <Rectangle x:Name="couche" Fill="Black" Height="35" Margin="0" Stroke="{x:Null}" VerticalAlignment="Center" Width="80" HorizontalAlignment="Center" RadiusX="5" RadiusY="5" StrokeThickness="0" Opacity="0"/>
                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsPressed" Value="True"/>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
            <TextBlock Text="دخول" FontSize="14"/>
        </Button>
        <Button x:Name="buttonNewMember" ToolTip="اذا كنت غير مسجل مسبقا يمكنك التسجيل من هنا" Margin="-20,150,0,0" VerticalAlignment="Center" Background="#FF2096F3" BorderBrush="{x:Null}" Click="buttonNewMember_Click" HorizontalAlignment="Center" Foreground="White" Height="35" Width="100" Style="{DynamicResource ButtonRectangle}">
            <Button.Resources>
                <Style x:Key="ButtonRectangle" TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                    <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="MinHeight" Value="25"/>
                    <Setter Property="Padding" Value="5,6"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="couche">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.05"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="couche">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle Fill="#1565C0" Height="35" Margin="0" Stroke="{x:Null}" VerticalAlignment="Center" Width="100" HorizontalAlignment="Center" RadiusX="5" RadiusY="5" StrokeThickness="0"/>
                                    <Rectangle x:Name="couche" Fill="Black" Height="35" Margin="0" Stroke="{x:Null}" VerticalAlignment="Center" Width="100" HorizontalAlignment="Center" RadiusX="5" RadiusY="5" StrokeThickness="0" Opacity="0"/>
                                    <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsPressed" Value="True"/>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                        <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
            <TextBlock Text="مستخدم جديد ؟" FontSize="12"/>
        </Button>
    </Grid>
</UserControl>
