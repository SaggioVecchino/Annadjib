<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Projet.View.UsrCtrl.Admin"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Custom1="http://metro.mahapps.com/winfx/xaml/shared" x:Class="Projet.View.UsrCtrl.Admin.ChangingPassAdmin"
             mc:Ignorable="d" 
                   d:DesignHeight="570" d:DesignWidth="690">

    <Grid Background="White" Height="570" Width="690">
        <Border x:Name="backgrnd" Background="#FFFFFF" CornerRadius="3">
            <Border.Effect>
                <DropShadowEffect BlurRadius="5" ShadowDepth="0" Opacity="0.2"/>
            </Border.Effect>
        </Border>
        <Grid>
            <Button x:Name="buttonClose" ToolTip="اغلاق نافذة تغيير كلمة سر المعلم" Width="35" Height="35" Style="{DynamicResource ButtonClose}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,15,15,0" Click="buttonClose_Click">
                <Button.Resources>
                    <Style x:Key="ButtonClose" TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                        <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="MinHeight" Value="25"/>
                        <Setter Property="Padding" Value="5,6"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Image x:Name="image" Source="/IMAGES/BUTTONS/close.png" Width="35" Height="35" Opacity="0.6"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True"/>
                                        <Trigger Property="IsPressed" Value="True"/>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                                        <Trigger Property="IsEnabled" Value="False"/>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>

            </Button>
            <StackPanel Orientation="Vertical" FlowDirection="RightToLeft" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Name="textBlock" TextWrapping="Wrap" Foreground="#616161" Text="كلمة المرور الحالية" Margin="0,0,20,0" FontSize="22" VerticalAlignment="Center"/>
                    <PasswordBox x:Name="textBox5" ToolTip="ادخل كلمة المرور الحالية" BorderThickness="0" Foreground="White" Background="#757575" BorderBrush="Transparent" FontSize="18" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="150" GotFocus="textBox5_GotFocus" Style="{DynamicResource PasswordBoxStyle1}">
                        <PasswordBox.Resources>
                            <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
                                <Setter Property="Custom:TextBoxHelper.ButtonWidth" Value="22"/>
                                <Setter Property="Custom:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}"/>
                                <Setter Property="Custom:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                                <Setter Property="Custom:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                                <Setter Property="Custom:PasswordBoxHelper.CapsLockIcon">
                                    <Setter.Value>
                                        <Grid Background="{DynamicResource BlackBrush}" Height="16" Opacity="0.8" Width="16">
                                            <Grid.OpacityMask>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Canvas Height="24" Width="24">
                                                            <Path Data="M13,14L11,14 11,10 13,10 M13,18L11,18 11,16 13,16 M1,21L23,21 12,2 1,21z" Fill="Black"/>
                                                        </Canvas>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Grid.OpacityMask>
                                        </Grid>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Custom:TextBoxHelper.IsMonitoring" Value="True"/>
                                <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                                <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                                <Setter Property="MinHeight" Value="26"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                                <Setter Property="Custom1:StylizedBehaviors.Behaviors">
                                    <Setter.Value>
                                        <Custom1:StylizedBehaviorCollection>
                                            <Custom1:PasswordBoxBindingBehavior/>
                                        </Custom1:StylizedBehaviorCollection>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="enterGotFocus">
                                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                                <Storyboard x:Key="exitGotFocus">
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                                <Storyboard x:Key="enterHasText">
                                                    <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                                <Storyboard x:Key="exitHasText">
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid>
                                                <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                                    <AdornerDecorator.CacheMode>
                                                        <BitmapCache EnableClearType="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </AdornerDecorator.CacheMode>
                                                    <Border x:Name="PART_WaitingForDataEffectGrid" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </AdornerDecorator>
                                                <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" CornerRadius="10"/>
                                                <Grid Margin="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition x:Name="ButtonRow" Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                                    <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Custom:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <ContentControl x:Name="PART_FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                                        <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Custom:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </ContentControl>
                                                    <ContentPresenter x:Name="PART_CapsLockIndicator" Content="{Binding (Custom:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" TextElement.Foreground="{DynamicResource ControlsValidationBrush}" HorizontalAlignment="Right" Margin="1" Grid.Row="0" Grid.RowSpan="2" ToolTip="{Binding (Custom:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center"/>
                                                    <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding Custom:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding Custom:TextBoxHelper.ButtonContent}" Grid.Column="2" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding Custom:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding Custom:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" Custom:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Custom:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding Custom:TextBoxHelper.ButtonWidth}">
                                                        <Button.Visibility>
                                                            <Binding Mode="OneWay" Path="(Custom:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <BooleanToVisibilityConverter/>
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </Button.Visibility>
                                                    </Button>
                                                </Grid>
                                                <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Custom:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Password, Mode=OneWay, RelativeSource={RelativeSource Self}}" Value="">
                                                    <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding (Custom:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                        <Condition Binding="{Binding (Custom:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" From="0" To="15" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiDataTrigger.EnterActions>
                                                    <MultiDataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" From="15" To="0" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                                <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiDataTrigger.ExitActions>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Custom:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                                    <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Custom:TextBoxHelper.HasText" Value="False"/>
                                                        <Condition Property="IsFocused" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.EnterActions>
                                                    <MultiTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.ExitActions>
                                                </MultiTrigger>
                                                <Trigger Property="Custom:TextBoxHelper.HasText" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                    <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsVisible" Value="True"/>
                                                        <Condition Property="Custom:TextBoxHelper.IsWaitingForData" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.EnterActions>
                                                    <Setter Property="Effect" TargetName="PART_WaitingForDataEffectGrid" Value="{DynamicResource WaitingForDataEffect}"/>
                                                    <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
                                                </MultiTrigger>
                                                <Trigger Property="Custom:TextBoxHelper.IsWaitingForData" Value="False">
                                                    <Setter Property="Effect" TargetName="PART_WaitingForDataEffectGrid" Value="{x:Null}"/>
                                                    <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </PasswordBox.Resources>
                    </PasswordBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                    <TextBlock x:Name="textBlock_copy" TextWrapping="Wrap" Foreground="#616161"  Text="كلمة المرور الجديدة" Margin="0,0,20,0" FontSize="22" VerticalAlignment="Center"/>
                    <PasswordBox x:Name="textBox6" ToolTip="ادحل كلمة المرور الجديدة ثم اضغط على حفظ" BorderThickness="0" Foreground="White" Background="#757575" BorderBrush="Transparent" FontSize="18" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MaxWidth="250" MinWidth="150" GotFocus="textBox5_GotFocus" Style="{DynamicResource PasswordBoxStyle1}">
                        <PasswordBox.Resources>
                            <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
                                <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
                                <Setter Property="Custom:TextBoxHelper.ButtonWidth" Value="22"/>
                                <Setter Property="Custom:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}"/>
                                <Setter Property="Custom:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                                <Setter Property="Custom:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                                <Setter Property="Custom:PasswordBoxHelper.CapsLockIcon">
                                    <Setter.Value>
                                        <Grid Background="{DynamicResource BlackBrush}" Height="16" Opacity="0.8" Width="16">
                                            <Grid.OpacityMask>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Canvas Height="24" Width="24">
                                                            <Path Data="M13,14L11,14 11,10 13,10 M13,18L11,18 11,16 13,16 M1,21L23,21 12,2 1,21z" Fill="Black"/>
                                                        </Canvas>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Grid.OpacityMask>
                                        </Grid>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Custom:TextBoxHelper.IsMonitoring" Value="True"/>
                                <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                                <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                                <Setter Property="MinHeight" Value="26"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                                <Setter Property="Custom1:StylizedBehaviors.Behaviors">
                                    <Setter.Value>
                                        <Custom1:StylizedBehaviorCollection>
                                            <Custom1:PasswordBoxBindingBehavior/>
                                        </Custom1:StylizedBehaviorCollection>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="enterGotFocus">
                                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                                <Storyboard x:Key="exitGotFocus">
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                                <Storyboard x:Key="enterHasText">
                                                    <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                                <Storyboard x:Key="exitHasText">
                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid>
                                                <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                                    <AdornerDecorator.CacheMode>
                                                        <BitmapCache EnableClearType="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </AdornerDecorator.CacheMode>
                                                    <Border x:Name="PART_WaitingForDataEffectGrid" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </AdornerDecorator>
                                                <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" CornerRadius="10"/>
                                                <Grid Margin="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition x:Name="ButtonRow" Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                                    <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding Custom:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    <ContentControl x:Name="PART_FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                                        <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Custom:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </ContentControl>
                                                    <ContentPresenter x:Name="PART_CapsLockIndicator" Content="{Binding (Custom:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" TextElement.Foreground="{DynamicResource ControlsValidationBrush}" HorizontalAlignment="Right" Margin="1" Grid.Row="0" Grid.RowSpan="2" ToolTip="{Binding (Custom:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center"/>
                                                    <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding Custom:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding Custom:TextBoxHelper.ButtonContent}" Grid.Column="2" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding Custom:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding Custom:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" Custom:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Custom:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding Custom:TextBoxHelper.ButtonWidth}">
                                                        <Button.Visibility>
                                                            <Binding Mode="OneWay" Path="(Custom:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                <Binding.Converter>
                                                                    <BooleanToVisibilityConverter/>
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </Button.Visibility>
                                                    </Button>
                                                </Grid>
                                                <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Custom:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Password, Mode=OneWay, RelativeSource={RelativeSource Self}}" Value="">
                                                    <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding (Custom:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                        <Condition Binding="{Binding (Custom:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" From="0" To="15" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiDataTrigger.EnterActions>
                                                    <MultiDataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" From="15" To="0" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                                <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiDataTrigger.ExitActions>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Custom:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                                </Trigger>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                                    <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Custom:TextBoxHelper.HasText" Value="False"/>
                                                        <Condition Property="IsFocused" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.EnterActions>
                                                    <MultiTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.ExitActions>
                                                </MultiTrigger>
                                                <Trigger Property="Custom:TextBoxHelper.HasText" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                    <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsVisible" Value="True"/>
                                                        <Condition Property="Custom:TextBoxHelper.IsWaitingForData" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </MultiTrigger.EnterActions>
                                                    <Setter Property="Effect" TargetName="PART_WaitingForDataEffectGrid" Value="{DynamicResource WaitingForDataEffect}"/>
                                                    <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
                                                </MultiTrigger>
                                                <Trigger Property="Custom:TextBoxHelper.IsWaitingForData" Value="False">
                                                    <Setter Property="Effect" TargetName="PART_WaitingForDataEffectGrid" Value="{x:Null}"/>
                                                    <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </PasswordBox.Resources>
                    </PasswordBox>
                </StackPanel>
                <TextBlock x:Name="message" Margin="0,20,0,0" TextWrapping="Wrap" Foreground="Red" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0" FlowDirection="RightToLeft">
                    <Button x:Name="save" ToolTip="حفظ التغييرات"  Click="save_Click" Height="40" Background="#2196F3" Width="100" Style="{DynamicResource ButtonStyle1}">
                        <Button.Resources>
                            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.05"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle Fill="#FF2196F3" Margin="0" RadiusY="5" RadiusX="5" Stroke="{x:Null}" StrokeThickness="0" Width="100" Height="40"/>
                                                <Rectangle x:Name="rectangle" Fill="Black" Margin="0" RadiusY="5" RadiusX="5" Stroke="{x:Null}" StrokeThickness="0" Width="100" Height="40" Opacity="0"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True"/>
                                                <Trigger Property="IsPressed" Value="True"/>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                        <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight">
                            <TextBlock Margin="4,0,4,0"  FontSize="16" Foreground="White"><Run Text="حفظ"/></TextBlock>
                            <Image Width="34" Source="/IMAGES/BUTTONS/save.png"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="cancel" ToolTip="إلغاء التغييرات"  Click="cancel_Click" Height="40" Background="#2196F3" Width="100" Margin="40,0,0,0" Style="{DynamicResource ButtonStyle1}">
                        <Button.Resources>
                            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                                <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="MinHeight" Value="25"/>
                                <Setter Property="Padding" Value="5,6"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.05"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle Fill="#1976D2" Margin="0" RadiusY="5" RadiusX="5" Stroke="{x:Null}" StrokeThickness="0" Width="100" Height="40"/>
                                                <Rectangle x:Name="rectangle" Fill="Black" Margin="0" RadiusY="5" RadiusX="5" Stroke="{x:Null}" StrokeThickness="0" Width="100" Height="40" Opacity="0"/>
                                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True"/>
                                                <Trigger Property="IsPressed" Value="True"/>
                                                <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                        <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight">
                            <TextBlock Margin="4,0,4,0"  FontSize="16" Foreground="White"><Run Text="إلغاء"/></TextBlock>
                            <Image Width="34" Source="/IMAGES/BUTTONS/close_white.png"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
