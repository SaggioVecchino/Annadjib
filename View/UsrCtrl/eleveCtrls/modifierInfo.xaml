<UserControl x:Class="Projet.View.UsrCtrl.eleveCtrls.modifierInfo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Custom1="http://metro.mahapps.com/winfx/xaml/shared"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:local="clr-namespace:Projet.View.UsrCtrl.eleveCtrls"
             mc:Ignorable="d" 
                           d:DesignHeight="570" d:DesignWidth="690">
    <Grid Height="570" Width="690">
        <Border x:Name="backgrnd" Background="#FFFFFF" CornerRadius="3">
            <Border.Effect>
                <DropShadowEffect BlurRadius="5" ShadowDepth="0" Opacity="0.2"/>
            </Border.Effect>
            <TextBlock  x:Name="Error" TextWrapping="Wrap" Text="nooo" Margin="212,468,224,34"
           Foreground="red"           Visibility="Hidden"  HorizontalAlignment="Center" TextAlignment="Center" Width="254" FontSize="24"/>

        </Border>
        <Button x:Name="exit" ToolTip="الخروج من الاعدادات" Width="35" Height="35" Style="{DynamicResource ButtonClose}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,15,15,0" Click="exit_Click">

            <Button.Resources>
                <Style x:Key="ButtonClose" TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                    <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                    <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                    <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                    <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="MinHeight" Value="25"/>
                    <Setter Property="Padding" Value="5,6"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Image x:Name="image" Source="/IMAGES/BUTTONS/close.png" Width="35" Height="35" Opacity="0.6"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True"/>
                                    <Trigger Property="IsPressed" Value="True"/>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                                    <Trigger Property="IsEnabled" Value="False"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Resources>
        </Button>
        <StackPanel x:Name="avatar_container" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,60,0,0" Height="120" Width="240">
            <Button x:Name="left" Click="left_Click" VerticalAlignment="Center" HorizontalAlignment="Left" Width="40" Height="40" BorderBrush="{x:Null}" Background="{x:Null}" Style="{DynamicResource ButtonRond40_40}">
                <Button.Resources>
                    <Style x:Key="ButtonRond40_40" TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                        <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="MinHeight" Value="25"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.05"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Ellipse Fill="#FF2196F3" Height="40" Margin="0" Stroke="{x:Null}" VerticalAlignment="Bottom" StrokeThickness="0" Width="40">
                                            <Ellipse.Effect>
                                                <DropShadowEffect Opacity="0.6" ShadowDepth="0" Direction="0" BlurRadius="4"/>
                                            </Ellipse.Effect>
                                        </Ellipse>
                                        <Ellipse x:Name="ellipse" Fill="Black" Height="40" Margin="0" Stroke="{x:Null}" VerticalAlignment="Bottom" StrokeThickness="0" Width="40" Opacity="0"/>
                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Width="40" Height="40" Panel.ZIndex="1"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True"/>
                                        <Trigger Property="IsPressed" Value="True"/>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Image Source="/IMAGES/BUTTONS/left.png" Height="40" Width="40" HorizontalAlignment="Center" VerticalAlignment="Center"></Image>
            </Button>
            <Grid Margin="20,0,20,0" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="120" Width="120">
                <Image x:Name="imgAvatar" Source="{Binding}"  Height="120" Width="120">
                </Image>
            </Grid>
            <Button x:Name="right" Click="right_Click" VerticalAlignment="Center" HorizontalAlignment="Right" Width="40" Height="40" BorderBrush="{x:Null}" Background="{x:Null}" Style="{DynamicResource ButtonRond40_40}">
                <Button.Resources>
                    <Style x:Key="ButtonRond40_40" TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                        <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="MinHeight" Value="25"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.05"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Ellipse Fill="#FF2196F3" Height="40" Margin="0" Stroke="{x:Null}" VerticalAlignment="Bottom" StrokeThickness="0" Width="40">
                                            <Ellipse.Effect>
                                                <DropShadowEffect Opacity="0.6" ShadowDepth="0" Direction="0" BlurRadius="4"/>
                                            </Ellipse.Effect>
                                        </Ellipse>
                                        <Ellipse x:Name="ellipse" Fill="Black" Height="40" Margin="0" Stroke="{x:Null}" VerticalAlignment="Bottom" StrokeThickness="0" Width="40" Opacity="0"/>
                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Width="40" Height="40" Panel.ZIndex="1"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True"/>
                                        <Trigger Property="IsPressed" Value="True"/>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True"/>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
                <Image Source="/IMAGES/BUTTONS/right.png" Height="40" Width="40" HorizontalAlignment="Center" VerticalAlignment="Center"></Image>
            </Button>
        </StackPanel>
        <WrapPanel x:Name="container_fields" Margin="20,210,0,0" Width="200" Height="180" FlowDirection="RightToLeft" VerticalAlignment="Top">
            <TextBlock x:Name="prenomText" Width="60" Height="40" Margin="0,10,0,10" TextWrapping="Wrap" Text="الإسم" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0,8,0,0" Foreground="#FF616161"/>
            <TextBox x:Name="firstname" ToolTip="تغيير الاسم" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="#2196F3" BorderBrush="#2196F3" BorderThickness="2" Text="{Binding Mode=OneWay}" TextWrapping="Wrap" Margin="0,10,0,10" TextAlignment="Center" VerticalAlignment="Center" GotFocus="firstname_GotFocus" LostFocus="firstname_LostFocus" Height="40" Width="140"/>

            <TextBlock x:Name="nomText" Text="اللقب" Width="60" Height="40" Margin="0,10,0,10" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" Padding="0,8,0,0" Foreground="#FF616161"/>

            <TextBox x:Name="lastname" ToolTip="تغيير اللقب" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="#2196F3" BorderBrush="#2196F3" BorderThickness="2" TextWrapping="Wrap" Margin="0,10,0,10"  Text="{Binding Mode=OneWay}" TextAlignment="Center" VerticalAlignment="Center" GotFocus="lastname_GotFocus" LostFocus="lastname_LostFocus" Height="40" Width="140"/>

            <TextBlock x:Name="dateNaissanceText" Text="تاريخ الميلاد" Width="60" Height="40" Margin="0,10,0,10" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" FontSize="11" Padding="2,8,0,0" Foreground="#FF616161"/>

            <DatePicker x:Name="dateNaissanceDP" ToolTip="تغيير تاريخ الميلاد" FlowDirection="RightToLeft" BorderThickness="2" FontSize="13" FontWeight="Bold" Margin="0,10,0,10" FontFamily="Arial" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" SelectedDateChanged="DatePicker_SelectedDateChanged" ForceCursor="True" Height="40" Width="140" Background="White" BorderBrush="#2196F3" Foreground="#2196F3" FirstDayOfWeek="Sunday" Text="ادخل تاريخ ميلادك" Style="{DynamicResource DatePickerStyle1}" GotFocus="DatePicker_GotFocus">

                <DatePicker.Resources>
                    <Style x:Key="DatePickerStyle1" TargetType="{x:Type DatePicker}">
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="CalendarStyle" Value="{DynamicResource MetroCalendar}"/>
                        <Setter Property="Custom:ControlsHelper.FocusBorderBrush" Value="#2196F3"/>
                        <Setter Property="Custom:ControlsHelper.MouseOverBorderBrush" Value="#2196F3"/>
                        <Setter Property="Custom:TextBoxHelper.ButtonWidth" Value="22"/>
                        <Setter Property="Custom:TextBoxHelper.IsMonitoring" Value="True"/>
                        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                        <Setter Property="IsTodayHighlighted" Value="True"/>
                        <Setter Property="MinHeight" Value="26"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="SelectedDateFormat" Value="Short"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DatePicker}">
                                    <Grid x:Name="PART_Root">
                                        <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Grid x:Name="PART_InnerGrid" Margin="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition x:Name="ButtonRow" Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" BorderBrush="#FF2196F3">
                                                <ContentControl Content="M34,52H31V38.5C29.66,39.9 28.16,40.78 26.34,41.45V37.76C27.3,37.45 28.34,36.86 29.46,36C30.59,35.15 31.36,34.15 31.78,33H34V52M45,52V48H37V45L45,33H48V45H50V48H48V52H45M45,45V38.26L40.26,45H45M18,57V23H23V20A2,2 0 0,1 25,18H29C30.11,18 31,18.9 31,20V23H45V20A2,2 0 0,1 47,18H51C52.11,18 53,18.9 53,20V23H58V57H18M21,54H55V31H21V54M48.5,20A1.5,1.5 0 0,0 47,21.5V24.5A1.5,1.5 0 0,0 48.5,26H49.5C50.34,26 51,25.33 51,24.5V21.5A1.5,1.5 0 0,0 49.5,20H48.5M26.5,20A1.5,1.5 0 0,0 25,21.5V24.5A1.5,1.5 0 0,0 26.5,26H27.5A1.5,1.5 0 0,0 29,24.5V21.5A1.5,1.5 0 0,0 27.5,20H26.5Z" Height="{TemplateBinding Custom:TextBoxHelper.ButtonWidth}" Padding="2" Style="{DynamicResource PathIconContentControlStyle}" Width="{TemplateBinding Custom:TextBoxHelper.ButtonWidth}"/>
                                            </Button>
                                            <DatePickerTextBox x:Name="PART_TextBox" HorizontalAlignment="Center" CaretBrush="{DynamicResource BlackBrush}" Grid.Column="0" ContextMenu="{DynamicResource TextBoxMetroContextMenu}" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}" FontSize="{TemplateBinding FontSize}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Grid.Row="1" SelectionBrush="{DynamicResource HighlightBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Custom:TextBoxHelper.Watermark="{Binding (Custom:TextBoxHelper.Watermark), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="Arial"/>
                                            <ContentControl x:Name="PART_FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                                <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" Text="{TemplateBinding Custom:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </ContentControl>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.Column="0" Placement="Bottom" Grid.Row="1" StaysOpen="False"/>
                                        </Grid>
                                        <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Custom:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Trigger>
                                        <Trigger Property="IsFocused" SourceName="PART_TextBox" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                            <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                            <Setter Property="Text" TargetName="PART_TextBox" Value="ادخل كلمة المرور"/>
                                            <Setter Property="Margin" TargetName="PART_FloatingMessageContainer" Value="0"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" SourceName="PART_Button" Value="True">
                                            <Setter Property="Background" TargetName="PART_Button" Value="#1E88E5"/>
                                            <Setter Property="Foreground" TargetName="PART_Button" Value="{DynamicResource WhiteBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" SourceName="PART_Button" Value="True">
                                            <Setter Property="Background" TargetName="PART_Button" Value="#1565C0"/>
                                            <Setter Property="Foreground" TargetName="PART_Button" Value="{DynamicResource WhiteBrush}"/>
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding (Custom:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                <Condition Binding="{Binding (Custom:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="15" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiDataTrigger.EnterActions>
                                            <MultiDataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" From="15" To="0" Storyboard.TargetProperty="MaxHeight" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer"/>
                                                        <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="PART_FloatingMessage">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiDataTrigger.ExitActions>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DatePicker.Resources>
            </DatePicker>
        </WrapPanel>
        <WrapPanel x:Name="container_buttons_save" Width="240" Height="90" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,60" FlowDirection="RightToLeft">
            <Button x:Name="sauvgarde" ToolTip="حفظ التغييرات" BorderThickness="0" Height="40" Width="80"  Foreground="White" Background="#2196F3" BorderBrush="#FF2196F3"
                 Click="sauvgarde_Click"   
             Style="{DynamicResource ButtonStyle1}" Margin="0,0,20,0">
                <Button.Resources>
                    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                        <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                        <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="MinHeight" Value="25"/>
                        <Setter Property="Padding" Value="5,6"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="Border" Value="#FF1E88E5"/>
                                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF1976D2"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="Border" Value="#FF1976D2"/>
                                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF1976D2"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                            <Setter Property="BorderThickness" TargetName="Border" Value="0"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="70">
                    <Image Source="/Projet;component/IMAGES/BUTTONS/save.png"  Width="30" Height="30"/>
                    <TextBlock Text="حفظ" FontSize="16" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </StackPanel>
            </Button>
            <Button x:Name="changePwd" ToolTip="اضغط هنا لتفيير كلمتك السرية" BorderThickness="0" Height="40" Width="140" Click="changePwd_Click" Foreground="White" Background="#1976D2" BorderBrush="#FF2196F3" Style="{DynamicResource ButtonStyle1}">
                <Button.Resources>
                    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                        <Setter Property="Custom:ControlsHelper.ContentCharacterCasing" Value="Upper"/>
                        <Setter Property="Custom:ControlsHelper.CornerRadius" Value="3"/>
                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="MinHeight" Value="25"/>
                        <Setter Property="Padding" Value="5,6"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Custom:ContentControlEx x:Name="PART_ContentPresenter" ContentCharacterCasing="{Binding (Custom:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" TargetName="Border" Value="#FF1E88E5"/>
                                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF1976D2"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" TargetName="Border" Value="#FF1976D2"/>
                                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF1976D2"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                            <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>
                <StackPanel Orientation="Horizontal" Width="120">
                    <Image Source="/Projet;component/IMAGES/BUTTONS/edit.png" Margin="0,0,0,0" Width="30" Height="30"/>
                    <TextBlock Text="تغير كلمة السر" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14"/>
                </StackPanel>
            </Button>
            <TextBlock x:Name="message_succes" HorizontalAlignment="Center" TextAlignment="Center" 
                              Foreground="#64DD17" FontSize="22" Text="تم الحفظ بنجاح" Visibility="Hidden" Width="220" Height="40"/>
        </WrapPanel>


    </Grid>
</UserControl>
